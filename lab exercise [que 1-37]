Q1: Create a department table with the following columns: dept_id (PK), dept_name
(not null), dept_location.

SQL> create table department108(dept_id varchar(5) primary key,dept_name varchar(10) not null,dept_location varchar(10));
Table created.

=================================================================================================================================================
Q2: Write a SQL query to create an employee table with the following columns: emp_id
(PK), emp_name, emp_salary (>20k), emp_join_date (between June 1998- till
date), dept_id (FK).

create table employee108(emp_id varchar(5) primary key,emp_name varchar(10),emp_salary numeric(12,2) check (emp_salary >20000),
emp_joindate date check (emp_joindate >= date '1998-06-01'),dept_id varchar(5),foreign key (dept_id) references department108(dept_id));
Table created.

====================================================================================================================================================
Q3: Create table support table with s_id (PK), emp_id (FK), dept_id (FK), status
(Yes/No).

SQL> create table support108(s_id varchar(5) primary key,emp_id varchar(5),foreign key (emp_id) references employee108(emp_id),dept_id varchar(5),
foreign key (dept_id) references department108(dept_id),status varchar(3) check (status in('yes','no')));

Table created.
====================================================================================================================================================
Q4: Display the schema of the above three tables.

SQL> desc department108;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 DEPT_ID				   NOT NULL VARCHAR2(5)
 DEPT_NAME				   NOT NULL VARCHAR2(10)
 DEPT_LOCATION					    VARCHAR2(10)

SQL> desc employee108;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID 				   NOT NULL VARCHAR2(5)
 EMP_NAME					    VARCHAR2(10)
 EMP_SALARY					    NUMBER(12,2)
 EMP_JOINDATE					    DATE
 DEPT_ID					    VARCHAR2(5)

SQL> desc support108;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 S_ID					   NOT NULL VARCHAR2(5)
 EMP_ID 					    VARCHAR2(5)
 DEPT_ID					    VARCHAR2(5)
 STATUS 					    VARCHAR2(3)

===================================================================================================================================================
Q5: Alter the employee table to add a new column emp_email of type VARCHAR(100).

SQL> alter table employee108 add emp_email varchar(100);
Table altered.

SQL> desc employee108;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID 				   NOT NULL VARCHAR2(5)
 EMP_NAME					    VARCHAR2(10)
 EMP_SALARY					    NUMBER(12,2)
 EMP_JOINDATE					    DATE
 DEPT_ID					    VARCHAR2(5)
 EMP_EMAIL					    VARCHAR2(100)

======================================================================================================================================================
Q6: Drop the support table if it is no longer required.

drop table support108;
Table dropped.
======================================================================================================================================================
Q7: Modify the emp_salary column in the employee table to allow values up to
DECIMAL(12, 2).

alter table employee108 modify emp_salary decimal(10,2);
Table altered.

SQL> desc employee108;
 Name					   Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID 				   NOT NULL VARCHAR2(5)
 EMP_NAME					    VARCHAR2(10)
 EMP_SALARY					    NUMBER(10,2)
 EMP_JOINDATE					    DATE
 DEPT_ID					    VARCHAR2(5)
 EMP_EMAIL					    VARCHAR2(100)
=======================================================================================================================================================
Q8: Add five suitable records to department table (Let value of dept_id starts with 101).

insert into department108 values(101,'cs','north');
insert into department108 values(102,'EEC','south');
insert into department108 values(103,'EEE','Elab');
insert into department108 values(104,'mech','south');
insert into department108 values(105,'mba','north');

SQL> select * from department108;

DEPT_ DEPT_NAME  DEPT_LOCAT
----- ---------- ----------
101   cs	 north
102   EEC	 south
103   EEE	 Elab
104   mech	 south
105   mba	 north
==========================================================================================================================================================
Q9: Insert the following employee record into the employee table: emp_id = 1, emp_name
= 'John Doe', emp_salary = 60000, emp_join_date = '15-05-2021', dept_id
= 101.

insert into employee108 values ('1', 'John Doe', 60000, to_date('2021-05-15', 'YYYY-MM-DD'), '101', 'john.doe@example.com');
1 row created.

============================================================================================================================================================
Q10: Insert multiple records of employees into the employee table with emp_id, emp_name,
emp_salary, and dept_id.

 insert into employee108 values(11,'sona',30000,to_date('2024-05-28','yyyy-mm-dd'),101,'sona@example.com');
1 row created.
 insert into employee108 values(22,'sunny',50000,to_date('2020-02-06','yyyy-mm-dd'),103,'sunny@example.com');
1 row created.
 insert into employee108 values(33,'lilly',35000,to_date('2021-03-27','yyyy-mm-dd'),102,'lilly@example.com');
1 row created.
insert into employee108 values(44,'stebin',40000,to_date('2022-08-31','yyyy-mm-dd'),101,'sona@example.com');
1 row created.
  insert into employee108 values(101,'ichu',48000,to_date('2023-05-05','yyyy-mm-dd'),102,'ichu@example.com');
1 row created.

================================================================================================================================================================
Q11: Update the salary of the employee with emp_id = 1 by increasing it by 10%.

SQL> update employee108 set emp_salary=emp_salary*1.10 where emp_id=1;
1 row updated.

==================================================================================================================================================================
Q12: Delete the record of the employee with emp_id = 1.

SQL> delete from employee108 where emp_id=1;
1 row deleted.
=================================================================================================================================================================
Q13: Update the emp_salary of employees in dept_id = 101 to 10% more if their current
salary is less than 50000.

SQL> select * from employee108;
EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_
----- ---------- ---------- --------- -----
EMP_EMAIL
--------------------------------------------------------------------------------
11    sona	      30000 28-MAY-24 101
sona@example.com

22    sunny	      50000 06-FEB-20 103
sunny@example.com

33    lilly	      35000 27-MAR-21 102
lilly@example.com
EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_
----- ---------- ---------- --------- -----
EMP_EMAIL
--------------------------------------------------------------------------------
44    stebin	      40000 31-AUG-22 101
sona@example.com

101   ichu	      48000 05-MAY-23 102
ichu@example.com


SQL> update employee108 set emp_salary=emp_salary*1.10 where emp_id=101 and emp_salary < 50000;
1 row updated.

SQL> select * from employee108;
EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_ EMP_EMAIL
----- ---------- ---------- --------- ----- -------------------------------------------
11    sona	      30000 28-MAY-24 101   sona@example.com
22    sunny	      50000 06-FEB-20 103   sunny@example.com
33    lilly	      35000 27-MAR-21 102   lilly@example.com
44    stebin	      40000 31-AUG-22 101   sona@example.com
101   ichu	      52800 05-MAY-23 102   ichu@example.com
====================================================================================================
Q14: Write a SELECT query to list all employees with their emp_id, emp_name, and
emp_salary.

SQL> select emp_id,emp_name,emp_salary from employee108;

EMP_I EMP_NAME	 EMP_SALARY
----- ---------- ----------
11    sona	      30000
22    sunny	      50000
33    lilly	      35000
44    stebin	      40000
101   ichu	      52800
====================================================================================================
Q15: Retrieve the emp_name, emp_salary, and emp_join_date for employees whose
salary is greater than 50000.

SQL> select emp_name,emp_salary,emp_joindate from employee108 where emp_salary > 50000;

EMP_NAME   EMP_SALARY EMP_JOIND
---------- ---------- ---------
ichu		52800 05-MAY-23
======================================================================================================
Q16: List employees in the employee table ordered by emp_salary in descending order.

SQL> select * from employee108 order by emp_salary desc;

EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_ EMP_EMAIL
----- ---------- ---------- --------- ----- ----------------------------------------------------------------------------------------------------
101   ichu	      52800 05-MAY-23 102   ichu@example.com
22    sunny	      50000 06-FEB-20 103   sunny@example.com
44    stebin	      40000 31-AUG-22 101   sona@example.com
33    lilly	      35000 27-MAR-21 102   lilly@example.com
11    sona	      30000 28-MAY-24 101   sona@example.com
=============================================================================================
Q17: Retrieve all employees' names and salaries who joined after 01-01-2020.

SQL> SELECT emp_name, emp_salary FROM employee108 WHERE emp_joindate > TO_DATE('2020-01-01', 'YYYY-MM-DD');
EMP_NAME   EMP_SALARY
---------- ----------
sona		30000
sunny		50000
lilly		35000
stebin		40000
ichu		52800
=================================================================================================
Q18: Write a query to select all employees whose name starts with "J".

SQL> select * from employee108 where emp_name like 'j%';
EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_ EMP_EMAIL
----- ---------- ---------- --------- ----- -----------------------
107   jaiden	      47000 01-AUG-23 102   jaiden@example.com
===================================================================================================
Q19: Select the emp_name and emp_salary for employees whose salary is between 40000
and 60000.

SQL> select emp_name,emp_salary from employee108 where emp_salary between 40000 and 60000;

EMP_NAME   EMP_SALARY
---------- ----------
sunny		50000
stebin		40000
ichu		52800
jaiden		47000
====================================================================================================
Q20: Write a query that groups employees by dept_id and shows the total salary per
department.


SQL> select dept_id,sum(emp_salary) as total_salary from employee108 group by dept_id;

DEPT_ TOTAL_SALARY
----- ------------
101	     70000
103	     50000
102	    134800
=======================================================================================================
Q21: Retrieve the department-wise average salary, but only for those departments with an
average salary above 60000.

SQL> select dept_id,avg(emp_salary) as avg_salary from employee108 group by dept_id having avg(emp_salary) > 60000;
DEPT_ AVG_SALARY
----- ----------
102	   74960
=============================================================================================================
Q22: List the departments and the number of employees in each department who earn
above 50000.

SQL> select dept_id,count(*) as number_of_employees from employee108 where emp_salary > 50000 group by dept_id;
DEPT_ NUMBER_OF_EMPLOYEES
----- -------------------
101			1
102			3
=======================================================================================================================
Q23: Use HAVING to list departments that have more than 3 employees.

SQL> select dept_id,count(*) as total_employees from employee108 group by dept_id having count(*) > 3;
DEPT_ TOTAL_EMPLOYEES
----- ---------------
102		    5
=======================================================================================================================
Q24: Write a query to find the names of employees who have a salary greater than the
average salary in their department.

SQL> select emp_name from employee108 where emp_salary >(select avg(emp_salary) from employee108 where dept_id = employee108.dept_id);

EMP_NAME
----------
sona
muthu
========================================================================================================================
Q25: Select the emp_name and emp_salary of employees who are in departments that are
located in 'Ernakulam'.

SQL> SQL> select emp_name,emp_salary from employee108 where dept_id=(select dept_id from department108 where dept_location='ernakulam');


EMP_NAME   EMP_SALARY
---------- ----------
sona		30000
stebin		40000
Anns		70000
==========================================================================================================================
Q26: Find the emp_name of employees who earn more than the highest salary in department
102.

SQL> update employee108 set emp_salary=200000 where emp_id=11;

1 row updated.

SQL> select emp_name from employee108 where emp_salary > (select max(emp_salary) from employee108 where dept_id=102);

EMP_NAME
----------
sona
=====================================================================================================================
Q27: Write a query that returns the department name of the department with the highest
total salary.

SQL> select dept_name from department108 where dept_id=(select dept_id from employee108 group by dept_id order by sum(emp_salary)desc fetch first 1 row only);


DEPT_NAME
----------
EEC
========================================================================================================
Q28: Find the emp_id and emp_name of employees who are working in departments with
less than 10 employees.

SQL> select emp_id ,emp_name from employee108 where dept_id in(select dept_id from employee108 group by dept_id having count(*)<10);

EMP_I EMP_NAME
----- ----------
11    sona
44    stebin
98    Anns
22    sunny
33    lilly
101   ichu
107   jaiden
99    Ann
100   muthu

9 rows selected.
============================================================================================================
Q29: Create a view high_salary_employees that lists the emp_name and emp_salary of
employees who earn above 70000.


SQL> create view high_salary_employee108 as select emp_name,emp_salary from employee108 where emp_salary > 70000;
View created.
================================================================================================================
Q30: Write a query to view the data from the high_salary_employees view.

SQL> select * from high_salary_employee108;
EMP_NAME   EMP_SALARY
---------- ----------
sona	       200000
muthu	       170000
==================================================================================================================
Q31: Create a view to list employees along with the department name and their salary,
filtering out employees earning below 50000.

SQL> create view  sona as select e.emp_name, e.emp_salary, d.dept_name from employee108 e
join department108 d ON e.dept_id = d.dept_id where emp_salary <50000;

View created.
==================================================================================================================
Q32: Drop the high_salary_employees view.

SQL> drop view high_salary_employee108;
View dropped.
================================================================================================
Q33: Write a query to find the total salary paid in each department.

SQL> select dept_id,sum(emp_salary) from employee108 group by dept_id; 
DEPT_ SUM(EMP_SALARY)
----- ---------------
101	       310000
103		50000
102	       374800

====================================================================================================
Q34: Use AVG() to find the average salary of employees in the 'Marketing' department.

SQL> select * from department108;

DEPT_ DEPT_NAME  DEPT_LOCAT
----- ---------- ----------
101   marketing  ernakulam
102   EEC	 south
103   EEE	 Elab
104   mech	 south
105   mba	 north

SQL> set linesize 300;
SQL> select * from employee108;

EMP_I EMP_NAME	 EMP_SALARY EMP_JOIND DEPT_ EMP_EMAIL
----- ---------- ---------- --------- ----- ----------------------------------------------------------------------------------------------------
11    sona	     200000 28-MAY-24 101   sona@example.com
22    sunny	      50000 06-FEB-20 103   sunny@example.com
33    lilly	      35000 27-MAR-21 102   lilly@example.com
44    stebin	      40000 31-AUG-22 101   sona@example.com
101   ichu	      52800 05-MAY-23 102   ichu@example.com
107   jaiden	      47000 01-AUG-23 102   jaiden@example.com
99    Ann	      70000 05-APR-23 102   ann@example.com
98    Anns	      70000 05-APR-23 101   anns@example.com
100   muthu	     170000 05-APR-23 102   muthu@example.com

9 rows selected.
SQL> select avg(emp_salary) from employee108 where dept_id=(select dept_id from department108 where dept_name='marketing');

AVG(EMP_SALARY)
---------------
     103333.333
============================================================================================
Q35: Find the employee with the highest salary in each department using MAX().

SQL> select dept_id,emp_name,emp_salary as highest_salary from employee108 where (dept_id,emp_salary) in(select dept_id,max(emp_salary)from employee108 group by dept_id);
SQL> select dept_id,emp_name,emp_salary as highest_salary from employee108 e1 where emp_salary=(select max(emp_salary)from employee108 where dept_id=e1.dept_id);

DEPT_ EMP_NAME	 HIGHEST_SALARY
----- ---------- --------------
101   sona		  200000
103   sunny		 50000
102   muthu		 170000

===========================================================================
Q36: Write a query that finds the total number of employees in each department.

SQL> select dept_id,count(*) as total_no_employees from employee108 group by dept_id;

DEPT_ TOTAL_NO_EMPLOYEES
----- ------------------
101		       3
103		       1
102		       5
===================================================================================
Q37: Calculate the sum of the salaries of all employees whose emp_salary is greater than
50000.
SQL> select sum(emp_salary) as sum_of_salary from employee108 where emp_salary > 50000;

SUM_OF_SALARY
-------------
       562800

========================================================================================








